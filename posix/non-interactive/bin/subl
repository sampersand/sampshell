#!/bin/sh

set -o nounset

# Allow for `ssubl` to overwrite the
scriptname=${SampShell_subl_scriptname:-"$(dirname "$0")"}

die () {
	printf >&2 "%s$1"'\n' "$scriptname"
	exit 1
}

editor=${SampShell_EDITOR:-TextEdit}
create=

while test "$#" -gt 0
do
	case "$1" in 
		--)
			shift
			break ;;

		-h | --help)
			cat >&2 <<USAGE
usage: $scriptname [options] [--] [file ...]"
options:
	-h, --help            print help, and then exit
	-c, --create          creates non-existing files/dirs
	-C, --no-create       disables creation
	-eNAME, --editor=NAME sets the editor; overrides \$SampShell_EDITOR.
USAGE
			exit 255 ;;

		-c | --create)
			create=1 ;;

		-C | --no-create)
			create= ;;

		-e* | --editor*)

			editor=${1#-e}
			if test "${editor}" = "${1}"
			then
				editor=${1#--editor}
			fi

			if test "x${editor}" = x
			then
				shift
				editor=${1:-}
				if test "x${editor}" = x
				then
					die 'missing required argument for -e'
				fi
			fi
			;;
		*)
			break ;;
	esac

	shift
done

if [ "$#" = 0 ]; then
	set -- "${PWD}"
elif [ -n "${create}" ]; then
	for file; do
		[ -z "${file}" ] && die 'empty filename given; not creating it'

		# File exists, no need to make it.
		[ -e "${file}" ] && continue

		# If the file ends with `/`, then it's a directory and we create it.
		if [ "${file%/}" != "$file" ]; then
			mkdir -p "${file}" || exit
		else
			{ mkdir -p "$(dirname "${file}")" && touch "${file}"; } || exit
		fi
	done
fi

open -a "${editor}" -- "$@"
