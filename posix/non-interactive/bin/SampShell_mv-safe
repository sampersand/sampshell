#!/bin/sh

# Safety first
set -o nounset

scriptname=$(basename "$0")

usage () { cat; exit 255; } <<EOS >&2
usage: $scriptname [-h/--help] ...
       $scriptname [options] [--] source target
       $scriptname [options] [--] source ... directory
options:
	-r/-R  enable/disable "rename mode" (see below)
	-c/-C  enable/disable overwriting empty files/folders
returns:
	0   if everything was successful
	254 if an unknown argument was given

Without the '-r' flag, this acts the same as 'mv -i', except it will try to
overwrite empty files/directories without confirmation. (Note that it's
impossible to guarantee this, as atomic operations arne't really possible).
With the '-r' option, a "rename" move will be perfomed (see below). If any other
flags are given, then all the arguments are forwarded to the builtin 'mv'.

A "rename" operation only works when provided a directory as the last argument;
passing a file in will result in an error. It will attempt to move the file to
the path '\$directory/{file basename}'. If that file already exists, it will
attempt to move the file to '\$directory/{file stem} #{file ext}', where '#' is
a number (starting from 2). The number will be incremented until a nonempty
file is found. ## (it might) This doesn't suffer from the atomic issues, and this operation
will never override extant files.
EOS

rename_mode=
clobber_empty=

while [ "$#" -ne 0 ]; do
	case "$1" in
	--) shift; break ;;
	-r) rename_mode=1 ;;
	-R) rename_mode= ;;
	-c) clobber_empty=1 ;;
	-C) clobber_empty= ;;
	-h|--help) usage ;;
	-*) exit 254;;
	*) break ;;
	esac
	shift
done

try_move () {
	if [ ! -e "$1" ]; then
		echo "$scriptname: cannot move $1: No such file or directory" >&2
		return 1
	fi

	base="$(basename "$2")"
	stem=${base%%.*}
	ext=${base#"$stem"}
	root="$(dirname "$2")/$stem"

	idx=
	while [ -e "$1" ]; do
		target="$root${idx:+" $idx"}$ext"

		# If the target exists, try again
		if [ -e "$target" ]; then
			[ -z "$idx" ] && idx=1
			: $((idx+=1))
			continue
		fi

		# try to move it in; if it doesn't succeed
		# try to move the file into the target
		command -p mv -n -- "$1" "$target" || return
	done
}

[ "$#" -le 1 ] && usage

# If two arguments are given, and the second isn't a directory, assume the first form
if [ "$#" -eq 2 ] && [ ! -d "$2" ]; then
	try_move "$@"
	exit
fi

# The target folder is the last argument; make sure it exists.
target_folder=$(eval "echo \"\${$#}\"")
if [ ! -d "$target_folder" ]; then
	echo "$scriptname: cannot move files into $target_folder: Not a directory" >&2
	exit 11
fi

last_status=0
until [ "$#" -eq 1 ]; do
	try_move "$1" "$target_folder/$(basename "$1")" || last_status=$?
	shift
done

exit "$last_status"
