#!/bin/sh

awk '
BEGIN {
  print ARGV[1]
}
{ lines[$0]++ }
END{
  max = 0
  for (line in lines) if (lines[line] > max) max = lines[line]
  print max
}
'

# require 'optparse'

# OptParse.new do |op|
#   op.on '-r', '--reverse', 'Reverse the output' do $reverse = true end
#   op.on '-c', '--count', 'Print the total count out as well' do $count = true end
#   op.on '-p', '--percentage[=PLACES]', Integer, 'Print out percentages; PLACES defaults to 3' do |pl|
#     $percentage = pl&.to_i || 3
#   end

#   op.parse!
# end

# lines = Hash.new 0
# lines[$_] += 1 while gets chomp: true

# lines = lines.sort_by(&:last)
# num_digits = lines.last.last.digits.count

# lines.reverse! if $reverse

# FORMAT_STRING = "%1$-#{num_digits}d#{$percentage && " ( %2$#{$percentage+3}.#{$percentage}f%% )"} %3$s\n"

# lines.each do |line, count|
#   printf FORMAT_STRING, count, count.fdiv($.) * 100, line
# end
