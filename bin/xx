#!/bin/zsh

usage () cat <<USAGE
usage: ${ZSH_SCRIPT:t} [-n] (-w WIDTH | -c COUNT) [--] string
	-n         Don't print the trailing newline
	-c COUNT   Print 'string' COUNT times
	-w WIDTH   Repeat 'string' until WIDTH chars are printed
USAGE

wopts=(-w 80) # Default output options
zparseopts -D -E -K n=no_newline {w,c}+:=wopts h=help # Parse command line options
[[ $1 == -- ]] && shift # `zparseopts` doesn't strip `--`, so we do that ourselves

# If help was requested, print the usage and exit.
(( $+help )) && { usage; exit }

# If not exactly one argument was left over, that's an error.
(( $# != 1 )) && { usage >&2; exit 1 }

msg=$1 # The message is the first argument

# Get the style and width from the last two values within `$wopts` (ie the last two values given, or
# the default if none were.)
style=$wopts[-2]
width=$wopts[-1]

# Make sure width is an integer
[[ $width != <-> ]] && { print "${ZSH_SCRIPT:t}: width has to be an integer" >&1; exit 1 }

# If `-c` was requested, then use ZSH's builtin repeat function.
if [[ $style == -c ]] then
	repeat $width do
		print -nr -- $msg
	done
else
	for (( ; 0 < width; width -= $#msg )) do
		printf '%.*s' $width $msg
	done
fi

[[ $no_newline ]] || print # Print a newline unless `-n` was provided

exit 0 # Success!
