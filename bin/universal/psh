#!/bin/sh

# Like `p`, but it uses `/bin/sh`, so it should always work.

# Safety first, in the situation where we're `.`d.
\unalias -a
set -uf +xve
unset -v IFS

files=
if [ "${1-}" = '-f' ]; then
   files=1
   shift
fi

# Print out a character and escape
if [ -n "${TERM-}" ]; then
   smso=$(command -p tput -T "$TERM" smso) || :
   rmso=$(command -p tput -T "$TERM" rmso) || :
fi

argno=0
for arg do
   if [ -n "$files" ]; then
      printf '%s: ' "$arg"
      arg=$(cat "$arg" && echo x)
      arg=${arg%x}
   else
      printf '%5d (len=%d): ' $(( argno += 1 )) "${#arg}"
   fi

   # Check for length in case `arg` has `NUL` in it; we cant use `-z`.
   while command -p test ${#arg} -ne 0
   do
      tail=${arg#?}
      head=${arg%"$tail"}
      arg=$tail

      case $head in
      [[:print:]]) printf %s "$head" ;;
      *)           printf '%s\\x%02X%s' "$smso" "'$head" "$rmso" ;;
      esac
   done

   echo
done
