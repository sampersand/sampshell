#!zsh
emulate -L zsh

# If we're not connected to a TTY, the just act like `history`, except all values are
# printed out by default. This lets us do `h | grep ...`
if [[ ! -t 1 ]] then
	history ${@:-0}
	return
fi

# If any arguments were given that aren't integers, instead interpret them as args to `grep`, and
# pass everything to grep.
if [[ $# -ne 0 && $1 != (-|)<-> ]]; then
	history 0 | egrep -i "$@"
	return
fi

# history $@ | awk '
# { a[NR] = $0 }
# END {
# 	x = $1 + 1
# 	sep = "%" length(x) "d %s\n"
# 	for (i = 1; i < NR; i++) {
# 		$0 = a[i]
# 		printf sp, $1-x, a[i]
# 	}
# }'

local sep amount REPLY
# Number the output lines
history $@ | while read -r; do
	amount=-$(( HISTCMD - ${REPLY[(wr)<->]} + 1 ))
	printf "%${sep:=$#amount}d %s\\n" $amount $REPLY
done
