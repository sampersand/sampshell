#!/usr/bin/env zsh

[[	$TRACE == 1 ]] && set -o xtrace

die () { echo "$@" >&2; exit 1; }


shellname=
sampshell_vars=1
normal_vars=1

typeset -a env_vars

while [[ $# > 0 ]]; do
	case $1 in
		-h) die 'short help' ;;
		--help) die 'long help' ;;


		--shell=*) shellname=${1#--shell=} ;;

		--normal-vars) normal_vars=1 ;;
		--sampshell-vars) sampshell_vars=1 ;;
		--no-builtin-vars) sampshell_vars= normal_vars= ;;

		--env) env_vars+=(ENV=${ENV?}) ;;
		--env=*) env_vars+=(ENV=${1#--env=}) ;;

		-v?*) set -- -v ${1#-v} $@[2,$#] ;&
		-v | --var) # don't support --var=a=b
			[[ ! -v 2 ]] && die 'need an argument for -v/--var'
			case $2 in
				*=*) env_vars+=($1) ;;
				*) env_vars+=($1=${(P)1}) ;;
			esac
			;;
		--) shift; break;;
		*) break ;;
	esac
	shift
done

if [[ -z $shellname ]]; then
	[[ $1 = [^-]* ]] && { shellname=$1; shift; }
	: ${shellname:=${SHELL:?no shell provided, and no SHELL in scope}}
fi

## Setup normal variables, if that's defined.
if [[ -n $normal_vars ]]; then
	env_vars[1,0]=SHELL=$shellname
	[[ -v TERM ]] && env_vars[1,0]=TERM=$TERM
	[[ -v HOME ]] && env_vars[1,0]=HOME=$HOME
	[[ -v SHLVL ]] && env_vars[1,0]=SHLVL=$((SHLVL-1))
fi

if [ -n "$sampshell_vars" ]; then
	# TODO: set other variables
	[[ -v SampShell_ROOTDIR ]] && env_vars[1,0]=SampShell_ROOTDIR=$SampShell_ROOTDIR
fi

exec env -i $env_vars $shellname $@
